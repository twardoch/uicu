---
description: Defines core data structures and models for Unicode data handling and Python type relationships
globs: src/uicu/*.py,tests/**/test_models.py,tests/**/test_data.py
alwaysApply: false
---


# data-models

## Core Data Models (Importance: 95)

The data model architecture centers around representing and transforming Unicode data between PyICU objects and Python native types:

1. **Unicode Data Representation**
- Custom data structures for Unicode character properties
- Mappings between PyICU Unicode database entries and Python string types
- Integration with fontTools.unicodedata writing system information
File: `src/uicu/models.py`

2. **Type Relationships** 
- Data models defining bidirectional conversion between:
  - PyICU UChar objects
  - Python str/bytes types
  - Writing system metadata from fontTools
- Cross-reference tables for character properties
File: `src/uicu/types.py`

## Object Model Hierarchy (Importance: 85)

Core class hierarchy for Unicode data abstraction:

```python
class UnicodeData:
    """Base class for Unicode character data"""
    # Maps to PyICU character database

class WritingSystemData:
    """Writing system metadata"""  
    # Integrates fontTools script information
```

File: `src/uicu/models.py`

## Model Relationships (Importance: 80)

The data models maintain bidirectional relationships between:

- PyICU's native character database structures
- Python's built-in Unicode string handling
- fontTools writing system metadata
- Custom property mappings and cross-references

These relationships enable seamless conversion while preserving Unicode data integrity.

File: `src/uicu/relationships.py`

$END$

 If you're using this file in context, clearly say in italics in one small line that "Context added by Giga data-models".